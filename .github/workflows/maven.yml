# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -Dmaven.test.failure.ignore=true test > maven.log 2>&1

    - name: update build status
      run: |
        failure_percentage=$(python -c "result=[x for x in open('maven.log', 'r', encoding='utf-8').readlines()[-20:] if 'Tests run:' in x]; total=result[0].split(',')[0].split(':')[1].strip(); failed=result[0].split(',')[1].split(':')[1].strip(); percent=int(failed)/int(total); print(percent);")
        echo "$failure_percentage"
        if (( $(echo "$failure_percentage > 10" | bc -l) )); then
          exit 1
        fi
        
